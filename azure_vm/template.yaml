# Notice the v1beta3 version
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: v1beta3-demo
  title: Create Azure Virtual Machine
  description: scaffolder v1beta3 template demo
spec:
  owner: ecarlos.a.silva@gmail.com
  type: service

  parameters:
    - title: "General Settings"
      required:
        - solution_name
        - region
        - environment
      properties:
        solution_name:
          title: Solution Name
          type: string
          description: The name of the solution or project.
        region:
          title: Region
          type: string
          description: Azure region for deployment (e.g., eastus2).
        environment:
          title: Environment
          type: string
          description: The deployment environment (e.g., dev, staging, prod).
    - title: "Network Settings"
      required:
        - vnet_name
        - vnet_rg
      properties:
        vnet_name:
          title: Virtual Network Name
          type: string
          description: The name of the virtual network to use.
        vnet_rg:
          title: Virtual Network Resource Group
          type: string
          description: The resource group for the virtual network.
    - title: Resource Group Settings
      required:
        - resource_group_name
      properties:
        resource_group_name:
          title: Resource Group Name
          type: string
          description: The name of the resource group to create or use.

  steps:
    - id: writeFile
      name: Create File
      action: roadiehq:utils:fs:write
      input:
        path: "current.tfvars"
        content: |
          solution_name       = ${{parameters.solution_name}}
          region              = ${{parameters.region}}
          environment         = ${{parameters.environment}}
          vnet_name           = ${{parameters.vnet_name}}
          vnet_rg             = ${{parameters.vnet_rg}}
          resource_group_name = ${{parameters.resource_group_name}}
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.name }}
        repoUrl: github.com?repo=${{ parameters.solution_name }}-repo&owner=CSCorpIt
        repoVisibility: public
    - id: register
      name: Register
      action: catalog:register
      input:
       repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
       catalogInfoPath: "/catalog-info.yaml"